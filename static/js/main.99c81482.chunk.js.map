{"version":3,"sources":["component/NoteContainer/noteContainer.module.css","component/TextFieldContainer/TextFieldContainer.jsx","store/actions.js","component/NoteContainer/NoteContainer.jsx","App.js","serviceWorker.js","index.js","store/reducers.js","component/TextFieldContainer/TextFieldContainer.module.css"],"names":["module","exports","note","notes","closeIcon","editIcon","TextFieldContainer","state","inputError","editNote","onAddHandler","test","_this","props","value","onAddNote","onClearInput","setState","onSubmitChanges","submitChanges","index","editFinish","onChangeHandler","input","onChangeInput","_this2","this","react_default","a","createElement","className","style","formContainer","ref","onChange","placeholder","onClick","onEdit","clearfix","Component","connect","dispatch","type","ADD_NOTE","CHANGE_INPUT","text","SUBMIT_CHANGES","index_es","icon","faWindowClose","faEdit","NoteContainer","onDeleteHandler","onDelete","clearInput","getNotes","lib_default","elementType","map","item","key","onEditHandler","React","DELETE_NOTE","CHANGE_NOTE","App","component_TextFieldContainer_TextFieldContainer","component_NoteContainer_NoteContainer","Boolean","window","location","hostname","match","store","createStore","combineReducers","arguments","length","undefined","action","localStorage","setItem","JSON","stringify","concat","Object","toConsumableArray","changedState","filter","parse","getItem","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99c81482.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"noteContainer_note__16V_W\",\"notes\":\"noteContainer_notes__3Pfmf\",\"closeIcon\":\"noteContainer_closeIcon__3DiXS\",\"editIcon\":\"noteContainer_editIcon__1uaSD\"};","import React, {Component} from 'react';\r\nimport style from './TextFieldContainer.module.css'\r\nimport {connect} from 'react-redux'\r\nimport {ADD_NOTE, CHANGE_INPUT, CLEAR_INPUT, EDIT_FINISH, SUBMIT_CHANGES} from \"../../store/actions\";\r\n\r\n\r\nclass TextFieldContainer extends Component {\r\n    state = {\r\n        inputError: false,\r\n        editNote: false\r\n    };\r\n\r\n    onAddHandler = () => {\r\n        if (/\\S/.test(this.props.state.value)) {\r\n            this.props.onAddNote(this.props.state.value);\r\n            this.props.onClearInput();\r\n        }\r\n        else {\r\n            this.setState(() => ({\r\n                inputError: true\r\n            }));\r\n            this.props.onClearInput();\r\n        }\r\n    };\r\n\r\n    onSubmitChanges = () => {\r\n        if (/\\S/.test(this.props.state.value)) {\r\n            const editNote = this.props.state.editNote;\r\n            this.props.submitChanges(this.props.state.value, editNote.index);\r\n            this.props.onClearInput();\r\n        }\r\n        else{\r\n            this.setState(() => ({\r\n                inputError: true\r\n            }));\r\n            this.props.editFinish();\r\n            this.props.onClearInput();\r\n        }\r\n    };\r\n\r\n    onChangeHandler = () => {\r\n        if (this.input.value === '') {\r\n            this.props.editFinish();\r\n        }\r\n        this.props.onChangeInput(this.input.value);\r\n        this.setState(() => ({\r\n            inputError: false\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={style.formContainer + ' form-group'}>\r\n                    <textarea className={this.state.inputError ? 'border border-danger form-control' : 'form-control'}\r\n                              ref={input => this.input = input}\r\n                              value={this.props.state.value}\r\n                              onChange={this.onChangeHandler}\r\n                              placeholder={'Write your note here...'}>\r\n                    </textarea>\r\n                <p className={'text-danger'}>{this.state.inputError ? 'First you need to fill the field' : ''}</p>\r\n                <button onClick={!this.props.state.editNote.onEdit ? this.onAddHandler : this.onSubmitChanges}\r\n                        className={'btn btn-outline-warning'}>\r\n                    {!this.props.state.editNote.onEdit ? 'ADD NOTE' : 'SUBMIT CHANGES'}\r\n                </button>\r\n                <div className={style.clearfix}></div>\r\n                <hr/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        state: state\r\n    }),\r\n    dispatch => ({\r\n        onAddNote: note => dispatch(ADD_NOTE(note)),\r\n        onChangeInput: value => dispatch(CHANGE_INPUT(value)),\r\n        onClearInput: () => dispatch(CLEAR_INPUT()),\r\n        editFinish: () => dispatch(EDIT_FINISH()),\r\n        submitChanges: (note, index) => dispatch(SUBMIT_CHANGES(note, index))\r\n    }))(TextFieldContainer);","export const ADD_NOTE = note => {\r\n    return {\r\n        type: 'ADD_NOTE',\r\n        note\r\n    }\r\n};\r\n\r\nexport const DELETE_NOTE = index => {\r\n    return {\r\n        type: 'DELETE_NOTE',\r\n        index\r\n    }\r\n};\r\n\r\nexport const CHANGE_INPUT = value => {\r\n    return {\r\n        type: 'CHANGE_INPUT',\r\n        value\r\n    }\r\n};\r\n\r\nexport const CLEAR_INPUT = () => {\r\n    return {\r\n        type: 'CLEAR_INPUT'\r\n    }\r\n};\r\n\r\nexport const CHANGE_NOTE = (note, index) => {\r\n    return {\r\n        type: 'CHANGE_NOTE',\r\n        note,\r\n        index\r\n    }\r\n};\r\n\r\nexport const EDIT_FINISH = () => {\r\n    return {\r\n        type: 'EDIT_FINISH'\r\n    }\r\n};\r\n\r\nexport const SUBMIT_CHANGES = (text, index) => {\r\n    return {\r\n        type: 'SUBMIT_CHANGES',\r\n        text,\r\n        index\r\n    }\r\n};\r\n\r\nexport const GET_NOTES = () => {\r\n    return {\r\n        type: 'GET_NOTES'\r\n    }\r\n};","import React from \"react\";\r\nimport style from \"./noteContainer.module.css\";\r\nimport Masonry from 'react-masonry-component';\r\nimport {connect} from 'react-redux';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faWindowClose, faEdit} from '@fortawesome/free-solid-svg-icons';\r\nimport {CHANGE_NOTE, CLEAR_INPUT, DELETE_NOTE, EDIT_FINISH, GET_NOTES} from \"../../store/actions\";\r\n\r\nconst closeIcon = <FontAwesomeIcon icon={faWindowClose}/>;\r\nconst editIcon = <FontAwesomeIcon icon={faEdit}/>;\r\n\r\nclass NoteContainer extends React.Component {\r\n\r\n    onDeleteHandler = (index) => {\r\n        this.props.onDelete(index);\r\n        this.props.editFinish();\r\n        this.props.clearInput();\r\n    };\r\n\r\n    onEditHandler(note, index){\r\n        this.props.onEdit(note, index);\r\n    };\r\n    componentDidMount(){\r\n        this.props.getNotes();\r\n    }\r\n    render() {\r\n        return (\r\n            <Masonry className={style.notes + ' row'}\r\n                     elementType={'div'}>\r\n                {this.props.state.notes.map((item, index) => <div key={index} className={'col-md-4'}>\r\n                    <p className={style.note}>\r\n                        <span className={style.closeIcon} onClick={() => this.onDeleteHandler(index)}>{closeIcon}</span>\r\n                        <span className={style.editIcon} onClick={() => this.onEditHandler(item, index)}>{editIcon}</span>\r\n                        {item.text}\r\n                    </p>\r\n                </div>)}\r\n            </Masonry>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        state\r\n    }),\r\n    dispatch => ({\r\n        onDelete: index => dispatch(DELETE_NOTE(index)),\r\n        onEdit: (item, index) => dispatch(CHANGE_NOTE(item, index)),\r\n        editFinish: () => dispatch(EDIT_FINISH()),\r\n        clearInput: () => dispatch(CLEAR_INPUT()),\r\n        getNotes: () => dispatch(GET_NOTES())\r\n    })\r\n)(NoteContainer)","import React from 'react';\nimport './App.css';\nimport TextFieldContainer from \"./component/TextFieldContainer/TextFieldContainer\";\nimport NoteContainer from \"./component/NoteContainer/NoteContainer\";\n\n// let notes = [\n//     {\n//         id: 1,\n//         color: 'lightblue',\n//         text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ' +\n//         'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in ' +\n//         'reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in ' +\n//         'culpa qui officia deserunt mollit anim id est laborum.'\n//     },\n//     {\n//         id: 2,\n//         color: 'lightblue',\n//         text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ' +\n//         'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in ' +\n//         'reprehenderit in v'\n//     },\n//     {\n//         id: 3,\n//         color: 'lightblue',\n//         text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ' +\n//         'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in ' +\n//         'reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in ' +\n//         'culpa qui officia deserunt '\n//     },\n//     {\n//         id: 4,\n//         color: 'lightblue',\n//         text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ' +\n//         'Ut enim ad minim veniam, quis nostrud'\n//     },\n//     {\n//         id: 5,\n//         color: 'lightblue',\n//         text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ' +\n//         'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in ' +\n//         'reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in ' +\n//         'culpa qui officia deserunt mollit anim id est laborum.'\n//     },\n//     {\n//         id: 6,\n//         color: 'lightblue',\n//         text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ' +\n//         'Ut enim ad minim veniam, '\n//     },\n//     {\n//         id: 7,\n//         color: 'lightblue',\n//         text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ' +\n//         'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in ' +\n//         'reprehenderit in voluptate velit esse '\n//     },\n//     {\n//         id: 8,\n//         color: 'lightblue',\n//         text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ' +\n//         'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in ' +\n//         'reprehenderit in voluptate velit esse cillum '\n//     },\n//     {\n//         id: 9,\n//         color: 'lightblue',\n//         text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ' +\n//         'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in ' +\n//         'reprehenderit in voluptate velit esse cillum '\n//     },\n//     {\n//         id: 10,\n//         color: 'lightblue',\n//         text: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. ' +\n//         'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in ' +\n//         'reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in ' +\n//         'culpa qui officia deserunt mollit anim id est laborum.'\n//     }\n//\n// ];\n\nclass App extends React.Component {\n    render() {\n        return (<div className='container'>\n            <TextFieldContainer/>\n            <NoteContainer/>\n        </div>)\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport {combineReducers, createStore} from \"redux\";\nimport {NoteReducer, changeInputReducer, editReducer} from \"./store/reducers\";\n\nconst store = createStore(combineReducers({\n    notes: NoteReducer,\n    editNote: editReducer,\n    value: changeInputReducer\n}));\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App/>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. NoteContainer.jsx this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const NoteReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'ADD_NOTE':\r\n            const note = {\r\n                text: action.note\r\n            };\r\n            localStorage.setItem('notes', JSON.stringify([...state, note]));\r\n            return [...state, note];\r\n        case 'DELETE_NOTE':\r\n            const changedState = state.filter((item, index) => index !== action.index);\r\n            localStorage.setItem('notes', JSON.stringify(changedState));\r\n            return changedState;\r\n        case 'SUBMIT_CHANGES':\r\n            state[action.index].text = action.text;\r\n            localStorage.setItem('notes', JSON.stringify(state));\r\n            return state;\r\n        case 'GET_NOTES':\r\n            if(localStorage['notes'])\r\n                return JSON.parse(localStorage.getItem('notes'));\r\n            else\r\n                return [];\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const changeInputReducer = (state = '', action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_INPUT':\r\n            return action.value;\r\n        case 'CLEAR_INPUT':\r\n            return '';\r\n        case 'CHANGE_NOTE':\r\n            return action.note.text;\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const editReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE_NOTE':\r\n            state.index = action.index;\r\n            state.note = action.note;\r\n            state.onEdit = true;\r\n            return state;\r\n        case 'EDIT_FINISH':\r\n            state.onEdit = false;\r\n            return state;\r\n        case 'SUBMIT_CHANGES':\r\n            state.onEdit = false;\r\n            return state;\r\n        default:\r\n            return state\r\n    }\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"TextFieldContainer_formContainer__GI4dM\",\"clearfix\":\"TextFieldContainer_clearfix__1TScl\"};"],"sourceRoot":""}